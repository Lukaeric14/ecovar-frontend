<!-- /snippets/breadcrumb.liquid -->
{% comment %} Custom breadcrumb: All Products > Previous Page > Current Page {% endcomment %}

{% unless template == 'index' %}
  <nav class="breadcrumb-nav" aria-label="Breadcrumb" style="padding-bottom: 20px;">
    <a id="breadcrumb-back-arrow" href="/collections/all" style="display:inline-block;vertical-align:middle;margin-right:8px;cursor:pointer;" aria-label="Back">
      <svg width="24" height="24" fill="none" stroke="#444" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" viewBox="0 0 24 24"><path d="M15 18l-6-6 6-6"/></svg>
    </a>
    <a href="/collections/all" class="breadcrumb-link" style="text-decoration:none; color:inherit; cursor:pointer;">All Products</a>
    <span class="breadcrumb-separator" style="margin: 0 8px; color: #888;">/</span>
    <span id="breadcrumb-prev-page" class="breadcrumb-link" style="color: #888;"></span>
    <span class="breadcrumb-separator" style="margin: 0 8px; color: #888;">/</span>
    <span class="breadcrumb-current" style="color: #888;">{%
      if template contains 'product' %}{{ product.title }}{%
      elsif template contains 'collection' %}{{ collection.title }}{%
      elsif template contains 'page' %}{{ page.title }}{%
      elsif template == 'blog' %}{{ blog.title }}{%
      elsif template == 'article' %}{{ article.title }}{%
      else %}{{ page_title }}{%
    endif %}</span>
  </nav>
  <script>
    console.log('[Breadcrumb] JS loaded');
    // Try to set previous page name in breadcrumb
    document.addEventListener('DOMContentLoaded', function() {
      // Make the back arrow smart: go to referrer if it exists, otherwise to /collections/all
      var backArrow = document.getElementById('breadcrumb-back-arrow');
      if (backArrow) {
        backArrow.addEventListener('click', function(e) {
          if (document.referrer && document.referrer !== window.location.href) {
            e.preventDefault();
            window.location = document.referrer;
          }
          // else, default /collections/all link will work
        });
      }
      var prevSpan = document.getElementById('breadcrumb-prev-page');
      if (!prevSpan) return;
      var ref = document.referrer;
      console.log('[Breadcrumb] document.referrer:', ref);
      if (!ref) { 
        console.log('[Breadcrumb] No referrer found. Hiding previous page breadcrumb.');
        prevSpan.style.display = 'none'; 
        return; 
      }
      try {
        var a = document.createElement('a');
        a.href = ref;
        var path = a.pathname;
        // Remove trailing slash
        if (path.length > 1 && path.endsWith('/')) path = path.slice(0, -1);
        var segments = path.split('/').filter(Boolean);
        var name = decodeURIComponent(segments.pop() || '');
        // Remove trailing numbers and normalize collection names
        name = name.replace(/[-_]\d+$/, ''); // Remove trailing dash/underscore + numbers
        name = name.replace(/\d+$/, ''); // Remove any remaining trailing numbers
        // Capitalize and prettify
        name = name.replace(/[-_]/g, ' ').replace(/\b\w/g, function(l) { return l.toUpperCase(); });
        console.log('[Breadcrumb] Parsed previous page name:', name);
        prevSpan.textContent = name || 'Previous';
        prevSpan.href = ref;
        prevSpan.style.color = '#444';
        prevSpan.style.cursor = 'pointer';
        prevSpan.onclick = function() { window.location = ref; };
      } catch(e) { 
        console.log('[Breadcrumb] Error parsing referrer:', e);
        prevSpan.style.display = 'none'; 
      }
    });
  </script>
{% endunless %}
