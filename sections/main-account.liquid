<!-- /templates/customers/account.liquid -->
<link rel="stylesheet" href="{{ 'base.css' | asset_url }}" />
<style>
  /* Main wrapper for all content - initially hidden */
  html:not(.page-loaded) .customer-account-page {
    opacity: 0;
  }
  
  html.page-loaded .customer-account-page {
    opacity: 1;
    transition: opacity 0.2s ease;
  }
  
  /* Pre-load fix to prevent large blue icons */
  svg {
    max-width: 24px;
    max-height: 24px;
    fill: none;
  }
  
  svg circle {
    fill: none;
  }
  
  .nav-icon {
    width: 16px;
    height: 16px;
  }
  
  /* Fix for duplicate navigation */
  html:not(.page-loaded) .mobile-bottom-nav,
  html:not(.page-loaded) .mobile-nav-dropdown,
  html:not(.page-loaded) #profile ~ * {
    display: none !important;
  }
  
  /* Fix for blue icon flash during page load */
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
</style>

<div class="customer-account-page container">
  <div class="row">
    <!-- Desktop Sidebar Navigation -->
    <div class="col-md-3 account-sidebar">
      <h4>Your Account</h4>
      <ul class="list-unstyled account-links">
        <li><a href="#" class="account-tab active" data-tab="profile">
          <svg class="nav-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
            <circle cx="12" cy="7" r="4"></circle>
          </svg>
          <span>Profile</span>
        </a></li> 
        <li class="has-submenu open">
          <a href="#" class="account-tab" data-tab="order-history">
            <svg class="nav-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"></path>
              <line x1="3" y1="6" x2="21" y2="6"></line>
              <path d="M16 10a4 4 0 0 1-8 0"></path>
            </svg>
            <span>Orders</span>
            <svg class="submenu-arrow" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <polyline points="6 9 12 15 18 9"></polyline>
            </svg>
          </a>
          <ul class="submenu list-unstyled">
            <li><a href="#" class="account-tab" data-tab="order-history">Order History</a></li>
            <li><a href="#" class="account-tab" data-tab="quotations">Quotations</a></li>
            <li><a href="#" class="account-tab" data-tab="reorder">Reorder items</a></li>
          </ul>
        </li>
        <li><a href="#" class="account-tab" data-tab="loyalty">
          <svg class="nav-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
            <polyline points="22 4 12 14.01 9 11.01"></polyline>
          </svg>
          <span>Loyalty Program</span>
        </a></li>
        <!--
        <li><a href="#" class="account-tab" data-tab="recommendations">
          <svg class="nav-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M12 2L15.09 8.26L22 9.27L17 14.14L18.18 21.02L12 17.77L5.82 21.02L7 14.14L2 9.27L8.91 8.26L12 2z"></path>
          </svg>
          <span>Recommended</span>
        </a></li> -->
        <li class="d-none d-md-block"><a href="{{ routes.account_logout_url }}" class="account-logout">
          <svg class="nav-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
            <polyline points="16 17 21 12 16 7"></polyline>
            <line x1="21" y1="12" x2="9" y2="12"></line>
          </svg>
          <span>Log Out</span>
        </a></li>
      </ul>
    </div>
    
    <!-- Mobile Bottom Navigation -->
    <div class="mobile-bottom-nav d-md-none">
      <a href="#" class="mobile-nav-item active" data-tab="profile">
        <svg class="nav-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
          <circle cx="12" cy="7" r="4"></circle>
        </svg>
        <span>Profile</span>
      </a>
      <a href="#" class="mobile-nav-item" data-tab="orders">
        <svg class="nav-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"></path>
          <line x1="3" y1="6" x2="21" y2="6"></line>
          <path d="M16 10a4 4 0 0 1-8 0"></path>
        </svg>
        <span>Orders</span>
      </a>
      <a href="#" class="mobile-nav-item" data-tab="loyalty">
        <svg class="nav-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
          <polyline points="22 4 12 14.01 9 11.01"></polyline>
        </svg>
        <span>Loyalty</span>
      </a>
      <a href="#" class="mobile-nav-item" data-tab="recommendations">
        <svg class="nav-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M12 2L15.09 8.26L22 9.27L17 14.14L18.18 21.02L12 17.77L5.82 21.02L7 14.14L2 9.27L8.91 8.26L12 2z"></path>
        </svg>
        <span>Recommended</span>
      </a>
    </div>

    <!-- Main Content -->
    <div class="col-md-9 account-content">
<script>
// Tab logic for desktop (sidebar) and mobile (bottom nav)
function activateTab(tab) {
  var tabName = tab.getAttribute('data-tab');
  var allTabs = document.querySelectorAll('.account-tab, .mobile-nav-item');
  var allContents = document.querySelectorAll('.tab-content');
  allTabs.forEach(function(t) { t.classList.remove('active'); });
  tab.classList.add('active');
  allContents.forEach(function(content) {
    // Only show desktop tab-content blocks on desktop
    if(window.innerWidth >= 768) {
      if(content.id === tabName) {
        content.classList.add('active');
        content.style.display = '';
      } else {
        content.classList.remove('active');
        content.style.display = 'none';
      }
    } else {
      // On mobile, only show the main tab-content for the active tab
      if(content.id === tabName) {
        content.classList.add('active');
        content.style.display = '';
      } else {
        content.classList.remove('active');
        content.style.display = 'none';
      }
    }
  });
  // Special handling for mobile Orders tab
  if(window.innerWidth < 768 && tabName === 'orders') {
    var selector = document.querySelector('.mobile-orders-selector');
    if(selector) selector.style.display = 'flex';
    // Show Order History subtab by default
    var defaultBtn = document.querySelector('.orders-toggle-btn[data-tab="order-history"]');
    if(defaultBtn) activateOrderSubtab(defaultBtn);
  } else if(window.innerWidth < 768 && tabName !== 'orders') {
    var selector = document.querySelector('.mobile-orders-selector');
    if(selector) selector.style.display = 'none';
    // Hide all mobile orders subtab content
    document.querySelectorAll('.orders-subtab-content').forEach(function(el){ el.style.display = 'none'; el.classList.remove('active'); });
  }
}

function activateOrderSubtab(btn) {
  var subtab = btn.getAttribute('data-tab');
  document.querySelectorAll('.orders-toggle-btn').forEach(function(b){ b.classList.remove('active'); });
  btn.classList.add('active');
  // Only toggle mobile subtab content
  document.querySelectorAll('#order-history-mobile, #quotations-mobile, #reorder-mobile').forEach(function(content) {
    if(content.id === subtab + '-mobile') {
      content.classList.add('active');
      content.style.display = '';
    } else {
      content.classList.remove('active');
      content.style.display = 'none';
    }
  });
}

document.addEventListener('DOMContentLoaded', function() {
  // Main tab logic
  var tabLinks = document.querySelectorAll('.account-tab, .mobile-nav-item');
  var tabContents = document.querySelectorAll('.tab-content');
  // If no tab is active, activate profile by default
  var anyActive = false;
  tabLinks.forEach(function(link) { if(link.classList.contains('active')) anyActive = true; });
  if (!anyActive) {
    var profileTab = document.querySelector('.account-tab[data-tab="profile"], .mobile-nav-item[data-tab="profile"]');
    if(profileTab) activateTab(profileTab);
  } else {
    // Ensure only one tab/content is active
    var foundActive = false;
    tabLinks.forEach(function(link) {
      if(link.classList.contains('active') && !foundActive) {
        activateTab(link);
        foundActive = true;
      }
    });
  }
  // Tab click handlers
  tabLinks.forEach(function(link) {
    link.addEventListener('click', function(e) {
      e.preventDefault();
      activateTab(link);
    });
  });
  // Orders subtab logic (mobile selector)
  var orderBtns = document.querySelectorAll('.orders-toggle-btn');
  orderBtns.forEach(function(btn) {
    btn.addEventListener('click', function() {
      activateOrderSubtab(btn);
    });
  });
});
</script>
      <!-- Profile Tab Content -->
      <div id="profile" class="tab-content active">
        {% render 'account-profile' %}
      </div>

      <!-- Orders Tab Content - Redirects to Order History -->
      <div id="orders" class="tab-content">
  <!-- Mobile-only Orders sub-navigation -->
  <div class="mobile-orders-selector d-md-none" style="margin: 12px 0 20px 0;">
    <button type="button" class="orders-toggle-btn active" data-tab="order-history">Order History</button>
    <button type="button" class="orders-toggle-btn" data-tab="quotations">Quotations</button>
    <button type="button" class="orders-toggle-btn" data-tab="reorder">Reorder Items</button>
  </div>
  <div id="order-history-mobile" class="orders-subtab-content d-md-none active">
    {% render 'account-order-history' %}
  </div>
  <div id="quotations-mobile" class="orders-subtab-content d-md-none" style="display:none;">
    {% render 'account-quotations' %}
  </div>
  <div id="reorder-mobile" class="orders-subtab-content d-md-none" style="display:none;">
    {% render 'account-reorder-items' %}
  </div>
  <style>
    .mobile-orders-selector {
      display: flex;
      justify-content: space-between;
      gap: 8px;
    }
    .orders-toggle-btn {
      flex: 1;
      padding: 10px 0;
      border: 1px solid #b0b88f;
      background: #fff;
      color: #b0b88f;
      font-weight: 600;
      border-radius: 6px;
      font-size: 15px;
      transition: background 0.15s, color 0.15s;
    }
    .orders-toggle-btn.active, .orders-toggle-btn:active {
      background: #b0b88f;
      color: #fff;
    }
    @media (min-width: 768px) {
      .mobile-orders-selector, .orders-subtab-content { display: none !important; }
    }
    @media (max-width: 767px) {
      .orders-desktop-content { display: none !important; }
      .orders-subtab-content { display: none; }
      .orders-subtab-content.active { display: block !important; }
    }
  </style>
</div>
<!-- Desktop: show each Orders subcategory as its own .tab-content, as before -->
<div id="order-history" class="tab-content">
  {% render 'account-order-history' %}
</div>
<div id="quotations" class="tab-content">
  {% render 'account-quotations' %}
</div>
<div id="reorder" class="tab-content">
  {% render 'account-reorder-items' %}
</div>

      
      <!-- Order History Tab Content -->


              


      
      <!-- Order History Tab Content -->
      <div id="order-history" class="tab-content">
        {% render 'account-order-history' %}
      </div>
      
      <!-- Quotations Tab Content -->
      <div id="quotations" class="tab-content">
        {% render 'account-quotations' %}
      </div>
      
      <!-- Reorder Items Tab Content -->
      <div id="reorder" class="tab-content">
        {% render 'account-reorder-items' %}
      </div>

      <!-- Loyalty Tab Content -->
      <div id="loyalty" class="tab-content">

        {% render 'account-loyalty-program' %}
      </div>

      <!-- Recommendations Tab Content -->
      <div id="recommendations" class="tab-content">
        {% render 'account-recommendations' %}
      </div>
    </div>
  </div>
</div>

 <script>
      window.CUSTOMER_NS_ID = "{{ customer.metafields.netsuite.ns_id | default: 'MISSING' }}";
      console.log("CUSTOMER_NS_ID = ",  window.CUSTOMER_NS_ID);
    
    
      document.addEventListener('DOMContentLoaded', function () {
        const nsId = "{{ customer.metafields.netsuite.ns_id | escape }}";
        console.log({nsId })
        if (!nsId) {
          console.warn("No NetSuite ID found for this customer.");
          return;
        }
    
        fetch(`https://ecovar-middleware-production.up.railway.app/api/customer/netsuite/loyalty/${nsId}`)
          .then(response => response.json())
          .then(data => {
          if (!Array.isArray(data)) return;
        
          const tbody = document.querySelector('.points-table tbody');
          const paginationContainer = document.querySelector('.pagination');
          if (!tbody || !paginationContainer) return;
        
          const perPage = 5;
          let currentPage = 1;
        
          function renderPage(page) {
            const start = (page - 1) * perPage;
            const end = start + perPage;
            const pageData = data.slice(start, end);
        
            tbody.innerHTML = '';
            pageData.forEach(entry => {
              const tr = document.createElement('tr');
              const date = entry.date || '';
              const desc = entry.description || '—';
              const pts = Number(entry.points || 0);
        
              tr.innerHTML = `
                <td>${date}</td>
                <td>${desc}</td>
                <td class="points-earned">+${pts}</td>
                <td><span class="status-badge">Completed</span></td>
              `;
        
              tbody.appendChild(tr);
            });
          }
        
          function renderPagination(totalPages) {
            paginationContainer.innerHTML = '';
            for (let i = 1; i <= totalPages; i++) {
              const btn = document.createElement('button');
              btn.textContent = i;
              btn.className = i === currentPage ? 'active' : '';
              btn.addEventListener('click', () => {
                currentPage = i;
                renderPage(currentPage);
                renderPagination(totalPages);
              });
              paginationContainer.appendChild(btn);
            }
          }
        
          const totalPages = Math.ceil(data.length / perPage);
          renderPage(currentPage);
          renderPagination(totalPages);
        })
          .catch(err => {
            console.error("Failed to fetch loyalty history:", err);
          });
      });
   </script>
   
<script>
// Fix for blue icon flash - preload fix applied before DOM is ready
(function() {
  // Immediately fix SVG icons to prevent blue flash
  var style = document.createElement('style');
  style.textContent = '\
    .nav-icon { \
      width: 16px !important; \
      height: 16px !important; \
      fill: none !important; \
    } \
    svg circle { \
      fill: none !important; \
    } \
  ';
  document.head.appendChild(style);
  
  // Add page-loaded class after DOM content and images are fully loaded
  window.addEventListener('load', function() {
    document.documentElement.classList.add('page-loaded');
  });
  
  // Fallback in case load event doesn't fire
  setTimeout(function() {
    document.documentElement.classList.add('page-loaded');
  }, 500);
})();

document.addEventListener('DOMContentLoaded', function() {
  const tabs = document.querySelectorAll('.account-tab');
  const mobileNavItems = document.querySelectorAll('.mobile-nav-item');
  const mobileSubItems = document.querySelectorAll('.mobile-nav-subitem');
  const tabContents = document.querySelectorAll('.tab-content');
  const hasSubmenuItems = document.querySelectorAll('.has-submenu > a');
  const mobileNavDropdown = document.querySelector('.mobile-nav-dropdown');
  
  // Initialize the page with Order History tab active unless another tab is specified
  const activeTabOnLoad = window.location.hash ? window.location.hash.substring(1) : 'order-history';
  
  // Determine which tab to activate based on URL hash or default
  const urlHash = window.location.hash.substring(1);
  // If there's a hash in the URL, use that as the active tab
  if (urlHash && document.querySelector('#' + urlHash)) {
    setTimeout(function() {
      activateTab(urlHash);
    }, 10);
  } 
  // Otherwise use the default tab behavior from before
  else if (activeTabOnLoad === 'order-history') {
    setTimeout(function() {
      const orderHistoryTab = document.querySelector('[data-tab="order-history"]');
      if (orderHistoryTab) {
        activateTab('order-history');
      }
    }, 10);
  }
  
  // Function to activate a tab
  function activateTab(tabId) {
    // Hide all tab contents
    tabContents.forEach(content => {
      content.classList.remove('active');
    });
    
    // Remove active class from all tabs
    tabs.forEach(tab => {
      tab.classList.remove('active');
    });
    
    // Remove active class from all mobile nav items
    mobileNavItems.forEach(item => {
      item.classList.remove('active');
    });
    
    // Remove active class from all mobile subitems
    mobileSubItems.forEach(item => {
      item.classList.remove('active');
    });
    
    // Add active class to selected tab
    document.querySelectorAll(`[data-tab="${tabId}"]`).forEach(tab => {
      tab.classList.add('active');
      
      // If it's a submenu item, also activate parent
      const parentLi = tab.closest('.has-submenu');
      if (parentLi) {
        parentLi.classList.add('open');
        const parentTab = parentLi.querySelector('.account-tab');
        if (parentTab) {
          parentTab.classList.add('active');
        }
      }
      
      // If it's a mobile submenu item, also activate parent
      const mobileParent = tab.closest('.mobile-nav-dropdown');
      if (mobileParent) {
        mobileParent.classList.add('open');
        const parentTab = mobileParent.querySelector('.mobile-nav-item');
        if (parentTab) {
          parentTab.classList.add('active');
        }
      }
    });
    
    // Show selected tab content
    const selectedContent = document.getElementById(tabId);
    if (selectedContent) {
      selectedContent.classList.add('active');
    }
  }
  
  // Toggle submenu (but keep it open by default)
  hasSubmenuItems.forEach(item => {
    item.addEventListener('click', function(e) {
      // Get the data-tab attribute - if it's not one of the submenus, toggle the open state
      const tabId = this.getAttribute('data-tab');
      if (tabId === 'order-history' || tabId === 'quotations' || tabId === 'reorder') {
        // If it's a submenu item, just activate the tab without toggling the menu
        e.preventDefault();
        activateTab(tabId);
      } else {
        // If it's the parent menu item, just toggle the open state
        e.preventDefault();
        const parent = this.parentNode;
        parent.classList.toggle('open');
      }
    });
  });
  
  // Handle mobile submenu (keep it open by default)
  if (mobileNavDropdown) {
    const mobileNavItem = mobileNavDropdown.querySelector('.mobile-nav-item');
    if (mobileNavItem) {
      mobileNavItem.addEventListener('click', function(e) {
        e.preventDefault();
        // Get the data-tab attribute and activate it directly
        const tabId = this.getAttribute('data-tab');
        activateTab(tabId);
      });
    }
  }
  
  // Add click event listeners to tabs
  tabs.forEach(tab => {
    if (!tab.closest('.has-submenu')) {
      tab.addEventListener('click', function(e) {
        e.preventDefault();
        const tabId = this.getAttribute('data-tab');
        activateTab(tabId);
      });
    }
  });
  
  // Add click event listeners to submenu tabs
  document.querySelectorAll('.submenu a').forEach(item => {
    item.addEventListener('click', function(e) {
      e.preventDefault();
      const tabId = this.getAttribute('data-tab');
      activateTab(tabId);
    });
  });
  
  // Add click event listeners to mobile nav items
  mobileNavItems.forEach(item => {
    if (!item.closest('.mobile-nav-dropdown')) {
      item.addEventListener('click', function(e) {
        e.preventDefault();
        const tabId = this.getAttribute('data-tab');
        activateTab(tabId);
      });
    }
  });
  
  // Add click event listeners to mobile submenu items
  mobileSubItems.forEach(item => {
    item.addEventListener('click', function(e) {
      e.preventDefault();
      const tabId = this.getAttribute('data-tab');
      activateTab(tabId);
      if (mobileNavDropdown) {
        mobileNavDropdown.classList.remove('open');
      }
    });
  });
});
</script>

<!-- Styles -->
<style>
.submenu-arrow {
  width: 16px;
  height: 16px;
  margin-left: auto;
  transition: transform 0.3s ease;
}

.has-submenu.open .submenu-arrow {
  transform: rotate(180deg);
}

.submenu {
  display: none;
  padding-left: 30px;
  margin-top: 5px;
}

.has-submenu.open .submenu {
  display: block;
}

.submenu li {
  margin-bottom: 8px;
}

.account-links a.account-tab {
  display: flex; /* Use flex for icon and text alignment */
  align-items: center;
  padding: 10px 15px;
  color: #2d3748; /* Dark gray for text */
  text-decoration: none;
  border-radius: 4px;
  margin-bottom: 5px; /* Space between items */
  transition: background-color 0.2s ease, color 0.2s ease;
}

.account-links a.account-tab:hover {
  background-color: #e9ecef; /* Lighter gray for hover */
  color: #000;
}

.account-links a.account-tab.active {
  background-color: #e0e0e0; /* Slightly darker gray for active */
  color: #000;
  font-weight: bold;
}

.account-links .nav-icon {
  margin-right: 10px; /* Space between icon and text */
  width: 18px; /* Consistent icon size */
  height: 18px;
}

.submenu a {
  color: #4a5568;
  text-decoration: none;
  font-size: 0.9em;
  display: block;
  padding: 5px 0;
  transition: color 0.3s ease;
}

.submenu a.account-tab {
  padding-left: 30px; /* Indent submenu items more clearly */
  font-size: 0.9em;
}

/* Hover and active states for submenu items will be inherited from .account-links a.account-tab */
.submenu a:hover {
  /* This can be removed if hover is handled by the general .account-tab:hover */
}

/* Orders overview styles */
.orders-overview {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 20px;
  margin-top: 20px;
}

.orders-option {
  background-color: #f8f8f8;
  border-radius: 8px;
  padding: 20px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.orders-option:hover {
  transform: translateY(-5px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.orders-option h3 {
  margin-top: 0;
  margin-bottom: 10px;
  font-size: 1.2rem;
  color: #2d3748;
}

.orders-option p {
  color: #718096;
  margin-bottom: 15px;
  font-size: 0.9rem;
}

.btn-outline-primary {
  color: #4a5568;
  background-color: transparent;
  border: 1px solid #CBD5E0;
  padding: 8px 16px;
  font-size: 0.9rem;
  border-radius: 4px;
  transition: all 0.2s ease;
  display: inline-block;
  text-decoration: none;
}

.btn-outline-primary:hover {
  background-color: #EDF2F7;
  color: #2D3748;
  text-decoration: none;
}

/* Mobile submenu styles */
.mobile-nav-dropdown {
  position: relative;
}

.mobile-submenu {
  display: none;
  position: absolute;
  bottom: 100%;
  left: 0;
  right: 0;
  background: white;
  border-top: 1px solid #eee;
  padding: 8px 0;
  box-shadow: 0 -4px 6px rgba(0, 0, 0, 0.05);
  z-index: 10;
}

.mobile-nav-dropdown.open .mobile-submenu {
  display: block;
}

.mobile-nav-subitem {
  display: block;
  padding: 10px 15px;
  color: #4a5568;
}

/* Ensure the parent 'Orders' tab doesn't stay highlighted if a sub-item is not active */
.account-links li.has-submenu > a.account-tab:not(.active) {
 /* If needed, add specific styles if the parent shouldn't look active when a child is */
}

/* Mobile Bottom Navigation */
.mobile-bottom-nav {
  display: none;
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background: white;
  box-shadow: 0 -2px 10px rgba(0,0,0,0.1);
  z-index: 1000;
  padding: 8px 0;
  justify-content: space-around;
  align-items: center;
  height: 60px;
}

.mobile-nav-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: #666;
  text-decoration: none;
  font-size: 10px;
  flex: 1;
  transition: all 0.2s ease;
  padding: 4px 0;
}

.mobile-nav-item.active {
  color: #b0b88f;
}

.mobile-nav-item .nav-icon {
  width: 20px;
  height: 20px;
  margin-bottom: 4px;
  stroke-width: 2;
}

.mobile-nav-item.active .nav-icon {
  stroke: #b0b88f;
}

/* Desktop Navigation Icons */
.nav-icon {
  width: 16px !important;
  height: 16px !important;
  margin-right: 8px;
  vertical-align: middle;
  stroke-width: 1.5;
  display: inline-block;
  fill: none !important; /* Prevent blue fills */
  max-width: 16px !important; /* Prevent oversized icons */
  min-width: 16px !important;
  overflow: visible;
}

/* Adjust content padding for mobile */
.account-content {
  padding-bottom: 70px; /* Space for mobile nav */
}

.customer-account-page {
  padding: 40px 0;
  font-family: 'Jost', sans-serif;
  min-height: 60vh;
  max-width: var(--page-width);
  margin: 0 auto;
  padding: 40px 24px;
  box-sizing: border-box;
}

/* Main layout */
.customer-account-page .row {
  display: flex;
  flex-wrap: nowrap;
  margin: 0 -15px;
}

/* Sidebar styles */
.account-sidebar {
  flex: 0 0 25%;
  max-width: 25%;
  padding: 0 15px;
  border-right: 1px solid #ddd;
  position: relative;
  height: 100%;
}

/* Main content area */
.account-content {
  flex: 0 0 75%;
  max-width: 75%;
  padding: 0 15px 0 30px;
}

/* Sidebar content */
.account-sidebar h4 {
  font-size: 18px;
  font-weight: 600;
  margin-bottom: 20px;
  padding-bottom: 10px;
  border-bottom: 1px solid #eee;
}

.account-links {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;
  height: 100%;
}

.account-links li {
  margin-bottom: 8px;
  width: 100%;
}

.account-links a {
  color: #333;
  text-decoration: none;
  display: block;
  padding: 10px 15px;
  border-radius: 6px;
  transition: all 0.2s ease;
  width: 100%;
  box-sizing: border-box;
}

.account-links a:hover {
  background-color: #f5f5f5;
}

.account-links a.active {
  font-weight: 600;
  color: #b0b88f;
  background-color: #f9f9f9;
  border-left: 3px solid #b0b88f;
  padding-left: 12px;
}

.account-links .account-logout {
  color: #dc3545;
  margin-top: auto;
  padding-top: 20px;
  border-top: 1px solid #eee;
}

.account-links .account-logout:hover {
  background-color: #f8d7da;
}

/* Content area */
.section-title {
  font-size: 24px;
  font-weight: 600;
  margin-bottom: 20px;
  padding-bottom: 10px;
  border-bottom: 1px solid #eee;
}

.tab-content {
  display: none;
  animation: fadeIn 0.3s ease;
  min-height: 400px;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Prevent any large elements during load */
svg {
  max-width: 24px !important;
  max-height: 24px !important;
  fill: none !important; /* Prevent blue fills on any SVGs */
  transition: none !important; /* Prevent transition artifacts during page load */
  display: inline-block;
}

svg circle {
  fill: none !important;
  stroke-width: 1.5;
  stroke: currentColor;
}

body .account-tab svg,
body .mobile-nav-item svg {
  fill: none !important;
  width: 16px !important;
  height: 16px !important;
  overflow: visible;
}

/* Show profile tab immediately to prevent flash of unstyled content */
#profile.tab-content {
  opacity: 1;
}

.tab-content.active {
  display: block;
}

/* Table styles */
.orders-table th, 
.orders-table td {
  text-align: left;
  padding: 12px;
  vertical-align: middle;
  border-bottom: 1px solid #eee;
}

.orders-table th {
  background-color: #f9f9f9;
  font-weight: 500;
  text-transform: uppercase;
  font-size: 0.85em;
  letter-spacing: 0.5px;
}

/* Button styles */
.btn-outline-primary {
  border-color: #b0b88f;
  color: #b0b88f;
  background: transparent;
  transition: all 0.2s ease;
  padding: 8px 16px;
  border-radius: 4px;
  font-weight: 500;
}

.btn-outline-primary:hover {
  background: #b0b88f;
  color: white;
  border-color: #b0b88f;
}

/* Loyalty Program Styles */
.loyalty-program {
  max-width: 100% !important;
  margin: 0 auto !important;
  padding: 2rem 1rem !important;
}

.points-summary {
  display: flex !important;
  gap: 1.5rem !important;
  margin-bottom: 2.5rem !important;
}

.points-card {
  background: white !important;
  border-radius: 12px !important;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06) !important;
  overflow: hidden !important;
  flex: 1 !important;
}

.points-card-header {
  background: var(--primary-color) !important;
  color: white !important;
  padding: 1.25rem !important;
  text-align: center !important;
}

.points-card-header h3 {
  margin: 0 0 0.5rem !important;
  font-size: 1.25rem !important;
  font-weight: 600 !important;
}

.points-amount {
  font-size: 2rem !important;
  font-weight: 700 !important;
  line-height: 1.2 !important;
}

.points-card-body {
  padding: 1.25rem !important;
}

.points-detail {
  display: flex !important;
  justify-content: space-between !important;
  margin-bottom: 0.75rem !important;
  font-size: 1rem !important;
  color: var(--text-muted) !important;
}

.points-detail:last-child {
  margin-bottom: 0 !important;
}

.tier-status {
  background: white !important;
  border-radius: 12px !important;
  padding: 1.75rem !important;
  margin-bottom: 2rem !important;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06) !important;
}

.tier-status h3 {
  margin-top: 0 !important;
  margin-bottom: 1.5rem !important;
  font-size: 1.5rem !important;
  font-weight: 600 !important;
  color: var(--text-dark) !important;
}

.tier-progress {
  margin-bottom: 1.25rem !important;
}

.tier-label {
  display: flex !important;
  justify-content: space-between !important;
  margin-bottom: 0.75rem !important;
  font-size: 1rem !important;
  font-weight: 500 !important;
  color: var(--text-muted) !important;
}

.progress {
  height: 10px !important;
  background: #e2e8f0 !important;
  border-radius: 5px !important;
  margin-bottom: 0.75rem !important;
  overflow: hidden !important;
}

.progress-bar {
  height: 100% !important;
  background: var(--primary-color) !important;
  border-radius: 5px !important;
  transition: width 0.6s ease !important;
}

.tier-requirements {
  display: flex !important;
  justify-content: space-between !important;
  font-size: 0.9375rem !important;
  color: var(--text-light) !important;
  font-weight: 500 !important;
}

.tier-note {
  font-size: 1rem !important;
  color: var(--text-muted) !important;
  text-align: center !important;
  margin: 1.5rem 0 0 !important;
  padding-top: 1.25rem !important;
  border-top: 1px solid #e2e8f0 !important;
  font-weight: 500 !important;
}

.points-history {
  background: white !important;
  border-radius: 12px !important;
  padding: 2rem !important;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06) !important;
}

.points-history .section-header {
  display: flex !important;
  justify-content: space-between !important;
  align-items: center !important;
  margin-bottom: 1.5rem !important;
  text-align: left !important;
}

.points-history h3 {
  margin: 0 !important;
  font-size: 1.5rem !important;
  font-weight: 600 !important;
  color: var(--text-dark) !important;
}

.view-options {
  display: flex !important;
  gap: 0.75rem !important;
}

.view-options button {
  padding: 0.5rem 1rem !important;
  background: #f8f9fa !important;
  border: 1px solid #e2e8f0 !important;
  border-radius: 6px !important;
  font-size: 0.9375rem !important;
  font-weight: 500 !important;
  color: var(--text-muted) !important;
  cursor: pointer !important;
  transition: all 0.2s ease !important;
}

.view-options button:hover {
  background: #f1f5f9 !important;
  border-color: #cbd5e0 !important;
}

.view-options button.active {
  background: var(--primary-color) !important;
  border-color: var(--primary-dark) !important;
  color: white !important;
  font-weight: 600 !important;
}

.points-table {
  width: 100% !important;
  overflow-x: auto !important;
  -webkit-overflow-scrolling: touch !important;
}

.points-table table {
  width: 100% !important;
  border-collapse: collapse !important;
}

.points-table th,
.points-table td {
  padding: 1rem 1.25rem !important;
  text-align: left !important;
  border-bottom: 1px solid #e2e8f0 !important;
  vertical-align: middle !important;
}

.points-table th {
  font-size: 0.875rem !important;
  font-weight: 600 !important;
  color: var(--text-light) !important;
  text-transform: uppercase !important;
  letter-spacing: 0.05em !important;
  background: #f8f9fa !important;
  white-space: nowrap !important;
}

.points-table td {
  font-size: 1rem !important;
  color: var(--text-muted) !important;
  font-weight: 500 !important;
  padding: 1.125rem 1.25rem !important;
}

.points-earned {
  color: var(--primary-dark) !important;
  font-weight: 600 !important;
}

.points-pending {
  color: #d69e2e !important;
  font-weight: 600 !important;
}

.status-badge {
  display: inline-block !important;
  padding: 0.375rem 0.875rem !important;
  background: rgba(187, 194, 154, 0.15) !important;
  color: var(--primary-dark) !important;
  border-radius: 9999px !important;
  font-size: 0.875rem !important;
  font-weight: 600 !important;
  white-space: nowrap !important;
}

.status-badge.pending {
  background: #fffaf0 !important;
  color: #d69e2e !important;
}

.status-badge.pending {
  background: #fff8e1;
  color: #ff8f00;
}

/* Pagination */
.pagination {
  padding: 15px 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 5px;
  border-top: 1px solid #eee;
}

.pagination button {
  min-width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid #ddd;
  background: white;
  border-radius: 4px;
  cursor: pointer;
  color: #333;
  font-size: 0.9rem;
}

.pagination button.active {
  background: #b0b88f;
  border-color: #b0b88f;
  color: white;
}

.pagination span {
  padding: 0 10px;
  color: #666;
}

/* Responsive adjustments */
@media (max-width: 767px) {
  .section-header {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .view-options {
    width: 100%;
    justify-content: center;
  }
  
  .points-table th,
  .points-table td {
    padding: 12px 15px;
  }
  
  .points-table th:nth-child(3),
  .points-table td:nth-child(3) {
    white-space: nowrap;
  }
}

/* Form styles */
.form-group {
  margin-bottom: 20px;
  max-width: 500px;
}

.form-control {
  width: 100%;
  padding: 10px 12px;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 16px;
  transition: border-color 0.2s ease;
}

.form-control:focus {
  border-color: #b0b88f;
  outline: none;
  box-shadow: 0 0 0 2px rgba(176, 184, 143, 0.2);
}

label {
  display: block;
  margin-bottom: 8px;
  font-weight: 500;
  color: #333;
}

/* Animations */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Recommendations Section */
.recommendations-section {
  padding: 2rem 1rem;
  max-width: 100%;
  margin: 0;
  width: 100%;
}

:root {
  --primary-color: #BBC29A;
  --primary-dark: #9AA87D;
  --text-dark: #2d3748;
  --text-muted: #4a5568;
  --text-light: #718096;
  --border-color: #e2e8f0;
  --background-light: #f8f9fa;
}

h1, h2, h3, h4, h5, h6 {
  color: var(--text-dark);
  font-weight: 600;
  margin-top: 0;
  line-height: 1.3;
}

h1 {
  font-size: 2.25rem;
  font-weight: 700;
  margin-bottom: 1.5rem;
}

h2 {
  font-size: 1.75rem;
  margin-bottom: 1.5rem;
  font-weight: 600;
}

h3 {
  font-size: 1.5rem;
  margin-bottom: 1.25rem;
  font-weight: 600;
}

h4 {
  font-size: 1.25rem;
  margin-bottom: 1rem;
  font-weight: 600;
}

p {
  margin-top: 0;
  margin-bottom: 1rem;
  line-height: 1.6;
  color: var(--text-muted);
  font-size: 1rem;
}

a {
  color: var(--primary-color);
  text-decoration: none;
  transition: color 0.2s ease, opacity 0.2s ease;
}

a:hover {
  color: var(--primary-dark);
  text-decoration: underline;
  opacity: 0.9;
}

.section-header {
  text-align: center;
  margin-bottom: 2.5rem;
}

.section-title {
  font-size: 1.75rem;
  font-weight: 600;
  color: var(--text-dark);
  margin-bottom: 0.75rem;
}

.section-subtitle {
  color: var(--text-light);
  font-size: 1.1rem;
  max-width: 600px;
  margin: 0 auto 1.5rem;
  line-height: 1.6;
}

.recommendations-carousel {
  display: flex;
  gap: 1.5rem;
  overflow-x: auto;
  padding: 1rem 0 2rem;
  scrollbar-width: thin;
  scrollbar-color: #cbd5e0 #f7fafc;
  -webkit-overflow-scrolling: touch;
  width: 100%;
  max-width: 100%;
}

.recommendations-carousel::-webkit-scrollbar {
  height: 8px;
}

.recommendations-carousel::-webkit-scrollbar-track {
  background: #f7fafc;
  border-radius: 10px;
}

.recommendations-carousel::-webkit-scrollbar-thumb {
  background-color: #cbd5e0;
  border-radius: 10px;
}

.product-card {
  flex: 0 0 auto;
  width: 260px;
  background: white;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  position: relative;
}

.product-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

.product-image {
  position: relative;
  padding-top: 100%;
  background: #f8fafc;
  overflow: hidden;
}

.product-image img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.5s ease;
}

.product-card:hover .product-image img {
  transform: scale(1.05);
}

.product-badge {
  position: absolute;
  top: 12px;
  left: 12px;
  background: #38a169;
  color: white;
  font-size: 0.75rem;
  font-weight: 600;
  padding: 0.25rem 0.75rem;
  border-radius: 9999px;
  z-index: 1;
}

.product-badge.new {
  background: #3182ce;
}

.quick-view-btn {
  position: absolute;
  top: 12px;
  right: 12px;
  width: 36px;
  height: 36px;
  border-radius: 50%;
  background: white;
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  cursor: pointer;
  opacity: 0;
  transform: translateY(10px);
  transition: all 0.3s ease;
  z-index: 1;
}

.product-card:hover .quick-view-btn {
  opacity: 1;
  transform: translateY(0);
}

.quick-view-btn:hover {
  background: #f7fafc;
}

.quick-view-btn svg {
  width: 16px;
  height: 16px;
  color: #4a5568;
}

.product-details {
  padding: 1.25rem;
}

.product-title {
  font-size: 1.1rem;
  font-weight: 500;
  color: var(--text-dark);
  margin: 0 0 0.75rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  line-height: 1.4;
}

.product-price {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 0.75rem;
}

.current-price {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--primary-dark);
}

.original-price {
  font-size: 0.875rem;
  color: #a0aec0;
  text-decoration: line-through;
}

.product-rating {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 1rem;
}

.stars {
  color: #f6ad55;
  font-size: 0.875rem;
  letter-spacing: 0.1em;
}

.review-count {
  font-size: 0.75rem;
  color: #a0aec0;
}

.add-to-cart-btn {
  display: block;
  width: 100%;
  padding: 0.75rem 1rem;
  background: var(--primary-color);
  color: white;
  border: none;
  border-radius: 6px;
  font-weight: 600;
  font-size: 0.9375rem;
  cursor: pointer;
  transition: all 0.2s ease;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.add-to-cart-btn:hover {
  background: var(--primary-dark);
  transform: translateY(-1px);
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.view-all-container {
  text-align: center;
  margin-top: 1.5rem;
}

.view-all-btn {
  display: inline-block;
  padding: 0.75rem 2rem;
  background: var(--primary-color);
  color: white;
  border: 1px solid var(--primary-dark);
  border-radius: 6px;
  font-weight: 600;
  font-size: 0.9375rem;
  text-align: center;
  transition: all 0.2s ease;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.view-all-btn:hover {
  background: var(--primary-dark);
  transform: translateY(-1px);
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  text-decoration: none;
  color: white;
}

/* Responsive adjustments */
@media (max-width: 991px) {
  .account-sidebar {
    display: none;
  }
  
  .mobile-bottom-nav {
    display: flex;
  }
  
  .account-content {
    padding-bottom: 70px;
  }
  .customer-account-page .row {
    flex-direction: column;
  }
  
  .account-sidebar,
  .account-content {
    flex: 0 0 100%;
    max-width: 100%;
    padding: 0;
  }
  
  .account-sidebar {
    border-right: none;
    border-bottom: 1px solid #eee;
    margin-bottom: 30px;
    padding-bottom: 20px;
  }
  
  .account-content {
    padding: 0;
  }
  
  .account-links {
    flex-direction: row;
    flex-wrap: wrap;
    gap: 10px;
  }
  
  .account-links li {
    margin-bottom: 0;
    flex: 1;
    min-width: 120px;
  }
  
  .account-links a {
    display: flex;
    align-items: center;
    padding: 8px 10px;
    font-size: 0.9em;
  }
  
  .account-links .account-logout {
    margin-top: 0;
    border-top: none;
    padding-top: 10px;
  }
  
  .account-links li {
    min-width: calc(50% - 5px);
    position: relative;
  }
  
  .account-links .has-submenu {
    width: 100%;
  }
  
  .account-links a {
    padding: 8px 5px;
    font-size: 0.85em;
  }
}

.mobile-nav-subitem:hover {
  background-color: #f8f9fa;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  line-height: 1.5;
  color: #4a5568;
}

/* The following background-color was part of the malformed block. 
   If a page background is desired, it should be applied to a specific container or body correctly.
   For now, it's commented out.
*/
/* background-color: #f8f9fa; */

/* Attempt to fix sidebar/content layout for desktop */
@media (min-width: 768px) {
  .customer-account-page > .row {
    display: flex !important;
    flex-wrap: wrap !important; /* Ensure Bootstrap's default wrapping behavior */
  }
  .account-sidebar.col-md-3 {
    flex: 0 0 25% !important;
    max-width: 25% !important;
    /* Bootstrap columns typically have padding, ensure it's present or adjust as needed */
    padding-left: 15px !important; 
    padding-right: 15px !important;
  }
  .account-content.col-md-9 {
    flex: 0 0 75% !important;
    max-width: 75% !important;
    /* Bootstrap columns typically have padding */
    padding-left: 15px !important;
    padding-right: 15px !important;
  }
}
</style>
