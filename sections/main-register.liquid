{{ 'customer.css' | asset_url | stylesheet_tag }}

{% style %}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .customer.register {
    border: 1px solid #ccc !important;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;
    border-radius: 8px !important;
    padding: 40px 30px !important;
    margin: 30px auto !important;
    max-width: 520px !important;
    width: calc(100% - 40px) !important;
  }

  @media screen and (min-width: 750px) {
    .customer.register {
      padding: 60px 80px !important;
      margin: 60px auto !important;
      width: auto !important;
    }
  }

  .customer.register .field,
  .customer.register .field:focus-within,
  .customer.register .field:hover {
    border-radius: 12px !important;
    border: 1px solid #ccc !important;
    margin-bottom: 1.5rem !important;
  }

  .customer.register input,
  .customer.register .field input,
  .customer.register input[type="email"],
  .customer.register input[type="password"],
  .customer.register input:focus,
  .customer.register input:active,
  .customer.register input:hover {
    border-radius: 12px !important;
    border: none !important;
    outline: none !important;
    width: 100% !important;
    box-sizing: border-box !important;
  }

  .customer.register button,
  .customer.register button[type="submit"] {
    background-color: #BBC29A !important;
    border-radius: 6px !important;
    color: white !important;
    padding: 10px 16px !important;
    border: none !important;
    box-shadow: none !important;
    outline: none !important;
    cursor: pointer !important;
    -webkit-appearance: none !important;
    -moz-appearance: none !important;
    appearance: none !important;
    width: 100%;
    margin-top: 1rem;
  }

  .customer.register button:hover {
    opacity: 0.9;
  }

  .login-link {
    margin-top: 1.5rem;
    display: block;
    text-align: center;
  }

  .login-link a {
    color: #000;
    text-decoration: underline;
  }

  .customer .field {
    margin: 0 0 1.5rem 0 !important;
  }

  .customer ul {
    margin: 0 0 1.5rem 0 !important;
    padding-left: 1.5rem !important;
  }

  .customer .form__message {
    margin-bottom: 1.5rem !important;
  }
{% endstyle %}

<div class="customer register section-{{ section.id }}-padding">
  <svg style="display: none">
    <symbol id="icon-error" viewBox="0 0 13 13">
      <circle cx="6.5" cy="6.50049" r="5.5" stroke="white" stroke-width="2"/>
      <circle cx="6.5" cy="6.5" r="5.5" fill="#EB001B" stroke="#EB001B" stroke-width="0.7"/>
      <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white"/>
      <path d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z" fill="white" stroke="#EB001B" stroke-width="0.7">
    </symbol>
  </svg>
  <h1>
    {{ 'customer.register.title' | t }}
  </h1>
  {%- form 'create_customer', novalidate: 'novalidate', id: 'create_customer' -%}
    {%- comment -%} Hidden fields for first and last name to maintain compatibility {%- endcomment -%}
    <input type="hidden" name="customer[first_name]" id="first_name" value="">
    <input type="hidden" name="customer[last_name]" id="last_name" value="">
    <input type="hidden" name="customer[note]" id="RegisterForm-Note">
        
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('create_customer');
    const fullNameField = document.getElementById('RegisterForm-FullName');
    
    if (form) {
      form.addEventListener('submit', function() {
        console.log("SUBMITTING");

        // Split full name
        if (fullNameField) {
          const fullName = fullNameField.value.trim();
          const nameParts = fullName.split(' ');
          const firstName = nameParts[0] || '';
          const lastName = nameParts.slice(1).join(' ') || '';
          document.getElementById('first_name').value = firstName;
          document.getElementById('last_name').value = lastName;
        }

        const noteField = document.getElementById('RegisterForm-Note');
        const phone = document.getElementById('RegisterForm-Phone');
        const company = document.getElementById('RegisterForm-Company');
        // const category = form.querySelector('#RegisterForm-Category'); // Category field removed

        console.log(phone?.value, company?.value, noteField?.value);

        if (noteField) {
          const noteData = {
            phone: phone?.value?.trim() || '',
            company: company?.value?.trim() || ''
          };
          noteField.value = JSON.stringify(noteData);
          console.log("Note JSON:", noteField.value);
        }
      });
    }
  });
</script>

    {%- if form.errors -%}
      <h2 class="form__message" tabindex="-1" autofocus>
        <svg aria-hidden="true" focusable="false">
          <use href="#icon-error" />
        </svg>
        {{ 'templates.contact.form.error_heading' | t }}
      </h2>
      <ul>
        {%- for field in form.errors -%}
          <li>
            {%- if field == 'form' -%}
              {{ form.errors.messages[field] }}
            {%- else -%}
              <a href="#RegisterForm-{{ field }}">
                {{ form.errors.translated_fields[field] | capitalize }}
                {{ form.errors.messages[field] }}
              </a>
            {%- endif -%}
          </li>
        {%- endfor -%}
      </ul>
    {%- endif -%}

    <div class="field">
      <input
        type="text"
        name="customer[name]"
        id="RegisterForm-FullName"
        {% if form.name %}
          value="{{ form.name }}"
        {% endif %}
        autocomplete="name"
        placeholder="{{ 'customer.register.full_name' | default: 'Full Name' | t }}"
        required
      >
      <label for="RegisterForm-FullName">
        {{ 'customer.register.full_name' | default: 'Full Name' | t }}
      </label>
    </div>
    <div class="field">
      <input
        type="text"
        name="customer[company]"
        id="RegisterForm-Company"
        {% if form.company %}
          value="{{ form.company }}"
        {% endif %}
        autocomplete="organization"
        placeholder="{{ 'customer.register.company' | default: 'Company' | t }}"
      >
      <label for="RegisterForm-Company">
        {{ 'customer.register.company' | default: 'Company' | t }}
      </label>
    </div>
    <div class="field">
      <input
        type="tel"
        name="customer[phone]"
        id="RegisterForm-Phone"
        {% if form.phone %}
          value="{{ form.phone }}"
        {% endif %}
        autocomplete="tel"
        placeholder="{{ 'customer.register.phone' | default: 'Phone Number' | t }}"
      >
      <label for="RegisterForm-Phone">
        {{ 'customer.register.phone' | default: 'Phone Number' | t }}
      </label>
    </div>
    <div class="field">
      <input
        type="email"
        name="customer[email]"
        id="RegisterForm-email"
        {% if form.email %}
          value="{{ form.email }}"
        {% endif %}
        spellcheck="false"
        autocapitalize="off"
        autocomplete="email"
        aria-required="true"
        {% if form.errors contains 'email' %}
          aria-invalid="true"
          aria-describedby="RegisterForm-email-error"
        {% endif %}
        placeholder="{{ 'customer.register.email' | t }}"
      >
      <label for="RegisterForm-email">
        {{ 'customer.register.email' | t }}
      </label>
    </div>
    {%- if form.errors contains 'email' -%}
      <span id="RegisterForm-email-error" class="form__message">
        <svg aria-hidden="true" focusable="false">
          <use href="#icon-error" />
        </svg>
        {{ form.errors.translated_fields.email | capitalize }}
        {{ form.errors.messages.email }}.
      </span>
    {%- endif -%}
    <div class="field">
      <input
        type="password"
        name="customer[password]"
        id="RegisterForm-password"
        aria-required="true"
        {% if form.errors contains 'password' %}
          aria-invalid="true"
          aria-describedby="RegisterForm-password-error"
        {% endif %}
        placeholder="{{ 'customer.register.password' | t }}"
      >
      <label for="RegisterForm-password">
        {{ 'customer.register.password' | t }}
      </label>
    </div>

    {%- if form.errors contains 'password' -%}
      <span id="RegisterForm-password-error" class="form__message">
        <svg aria-hidden="true" focusable="false">
          <use href="#icon-error" />
        </svg>
        {{ form.errors.translated_fields.password | capitalize }}
        {{ form.errors.messages.password }}.
      </span>
    {%- endif -%}

    <button>
      {{ 'customer.register.submit' | t }}
    </button>

    <div class="login-link">
      <span>Already have an account? <a href="{{ routes.account_login_url }}">Login here</a></span>
    </div>
  {%- endform -%}
</div>

{% schema %}
{
  "name": "t:sections.main-register.name",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
